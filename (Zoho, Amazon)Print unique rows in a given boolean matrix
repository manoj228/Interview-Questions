//Time complexity : O(n*n)
#include <stdio.h>

int call(int u[],int t)
{
    for(int i=0;i<t;i++)
    {
        int search=u[i];
        for(int j=i+1;j<t;j++)
        {
            if(search==u[j])
            {
                return j;
            }
        }
    }
    return 0; 
}
void find(int a[][5],int r,int c)
{
    int s=0,u[r],t=0,res;
    
    for(int i=0;i<r;i++)
    {
        for(int j=0;j<c;j++)
        {
         s = s*10 + a[i][j];
         
         if(j==c-1)
         {
             u[t++]=s;
             s=0;
         }
        }
    }
    
    res=call(u,t);
    for(int i=0;i<r;i++)
    {
        for(int j=0;j<c;j++)
        {
            if(res!=i)
            printf("%d ",a[i][j]);
        
        if(j==c-1 && i!=res)
        printf("\n");
        }
    }
    
}
int main()
{
   int a[4][5] = {
        {0, 1, 0, 0, 1},
        {1, 0, 1, 1, 0},
        {0, 1, 0, 0, 1},
        {1, 1, 1, 0, 0}};
   
   int r=4,c=5;
   find(a,r,c);
   
   
    return 0;
}
