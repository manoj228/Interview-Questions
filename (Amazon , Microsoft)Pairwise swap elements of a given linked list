//Time complexity : O(n)
// Amazon and Microsoft
#include <stdio.h>
#include <stdlib.h>

struct node
{
    int data;
    struct node *link;
};

struct node *root = NULL;

void insert()
{
    struct node *temp , *p = root ;
    temp = (struct node *) malloc (sizeof(struct node));
    
    printf("Enter Data :");
    scanf("%d",&temp->data);
    temp -> link = NULL;
    
    if(root == NULL)
    root = temp ;
    else
    {
        while(p->link != NULL)
        {
            p = p-> link;
        }
        
        p -> link = temp;
    }
    
}

void display()
{
    struct node *temp=root;
    
    if(root == NULL)
    printf("No items found");
    else
    {
        while(temp)
        {
            printf("%d ",temp->data);
            temp = temp -> link ;
        }
    }
    
    
}

void swap(int *a,int *b)
{
    int t = *a;
    *a = *b;
    *b = t;
}

void swaps(struct node *root)
{
    if(root != NULL && root -> link != NULL)
    {
        swap(&root->data, &root->link->data);
        
        swaps(root->link->link);
    }
    
}


int main()
{
    int ch;
    while(1)
    {
        printf("\nLinkedList Operation");
        printf("\n1) Insert");
        printf("\n2) Display");
        printf("\n3) Swap");
        printf("\n4) Exit");
        printf("\nEnter your choice");
        scanf("%d",&ch);
        
        switch(ch)
        {
            case 1 : insert();
            break;
            
            case 2 : display();
            break;
            
            case 3 : swaps(root);
            break;
            
            case 4 : exit(1);
        }
    }

    return 0;
}
