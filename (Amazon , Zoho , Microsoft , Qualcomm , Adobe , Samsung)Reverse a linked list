//Time complexity : O(n)

#include <stdio.h>
#include <stdlib.h>

struct node
{
    int data;
    struct node *link;
};

void push(struct node **p,int data)
{
    struct node *temp = (struct node *)malloc(sizeof(struct node));
    
    temp -> data = data;
    
    temp -> link = (*p);
    
    (*p) = temp;
}

void display(struct node *t)
{
    while(t)
    {
        printf("%d ",t->data);
        t = t->link;
    }
}

void swap(int *a,int *b)
{
    int t=*a;
    *a=*b;
    *b=t;
}
void reverse(struct node **p)
{
    struct node *curr = *p , *prev = NULL, *next = NULL;
    
    while(curr != NULL)
    {
        next = curr -> link;
        curr -> link = prev;
        prev = curr;
        curr = next;
    }
    *p = prev ;
}

int main()
{
    struct node *a = NULL;
    
    push(&a,1);
    push(&a,2);
    push(&a,3);
    push(&a,4);
    push(&a,5);
    push(&a,6);
    
    display(a);
    
    reverse(&a);
    printf("\n");
    display(a);
    
    return 0;
}
